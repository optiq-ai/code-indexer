version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: optiq
      POSTGRES_PASSWORD: secure_password
      POSTGRES_DB: code_index
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U optiq -d code_index"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=code_index
      - POSTGRES_USER=optiq
      - POSTGRES_PASSWORD=secure_password
      - LLM_MODE=${LLM_MODE:-OPENAI}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-key-here}
      - CELERY_BROKER_URL=redis://redis:6379/0
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  celery_worker:
    build: ./backend
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=code_index
      - POSTGRES_USER=optiq
      - POSTGRES_PASSWORD=secure_password
      - LLM_MODE=${LLM_MODE:-OPENAI}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-key-here}
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: python celery_worker.py

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:
